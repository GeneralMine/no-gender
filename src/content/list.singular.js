(function (global) {
  global.noGender = global.noGender || {}

  const APP = global.noGender
  const { getInRegExp } = APP.helpers

  /* list of plural terms */
  APP.listSingular = [
    /**
     * Replace objects of singular terms that have no generic replacer
     */
    getInRegExp('Bäuer', 'Bauer'),
    getInRegExp('Bürg', 'Bürger'),
    getInRegExp('Ärzt', 'Arzt'),
    getInRegExp('Anwält', 'Anwalt'),
    getInRegExp('Gött', 'Gott'),
    getInRegExp('Rät', 'Rat'),
    getInRegExp('Päpst', 'Papst'),
    getInRegExp('Wölf', 'Wolf'),
    getInRegExp('Prinzess', 'Prinz'),
    getInRegExp('Närr', 'Narr'),
    getInRegExp('Gräf', 'Graf'),
    getInRegExp('Tör', 'Tor'),
    getInRegExp('Köch', 'Koch'),
    getInRegExp('Büb', 'Bub'),
    getInRegExp('Spätz', 'Spatz'),
    getInRegExp('Schwän', 'Schwan'),
    getInRegExp('Männ', 'Mann'),
    getInRegExp('Kustod', 'Kustos'),
    getInRegExp('Kirgis', 'Kirgise'),
    getInRegExp('Israel', 'Israeli'),
    getInRegExp('Hünd', 'Hund'),
    getInRegExp('Füchs', 'Fuchs'),
    getInRegExp('Frei', 'Freier'),
    getInRegExp('Bischöf', 'Bischof'),
    getInRegExp('Schwäger', 'Schwager'),
    getInRegExp('Zöger', 'Zögerer'),
    getInRegExp('Häs', 'Hase'),
    getInRegExp('Französ', 'Franzose'),
    getInRegExp('Fränk', 'Franke'),
    getInRegExp('Kätz', 'Katze'),
    getInRegExp('Jüd', 'Jude'),
    getInRegExp('Westfäl', 'Westfale'),
    getInRegExp('Bischöf', 'Bischof'),
    getInRegExp('Kustod', 'Kustos'),
    getInRegExp('Wander', 'Wanderer'),
  ].concat([
    /**
     * Replace object for singular terms ending with e:
     * - Psycholog*in -> Psychologe
     * - Pädagog*in -> Pädagoge
     * - Ottoman*in -> Ottomane
     * - Kolleg*in -> Kollege
     * - Zeug*in -> Zeuge
     */
    getInRegExp([
      'log',
      'gog',
      'oman',
      'Kolleg',
      'Zeug',
      'Strateg',
      'Strateg',
      'Beamt',
      'Expert',
      'Gatt',
      'Pat',
      'Schott',
      'Hirt',
      'Mulatt',
      'Lett',
      'Gefährt',
      'Kroat',
      'Kelt',
      'Est',
      'Brit',
      'Bot',
      'Asket',
      'Asiat',
      'Westfäl',
      'Wend',
      'Welf',
      'Russ',
      'Vietnames',
      'Vestal',
      'Verones',
      'Usbek',
      'Uigur',
      'Turkmen',
      'Türk',
      'Tschech',
      'Tragöd',
      'Togoles',
      'Schütz',
      'Tadschik',
      'Südsudanes',
      'Sudanes',
      'Kund',
      'Sorb',
      'Sklav',
      'Slaw',
      'Slowak',
      'Slowen',
      'Serb',
      'Senegales',
      'Schwed',
      'Schurk',
      'Lots',
      'Schöff',
      'Schimpans',
      'Schaman',
      'Kumpan',
      'Sard',
      'Rival',
      'Rumän',
      'Reuss',
      'Reuß',
      'Rätoroman',
      'Pol',
      'Portugies',
      'Preuss',
      'Preuß',
      'Osman',
      'Oriental',
      'Orthopäd',
      'Nymphoman',
      'Jüd',
      'Nebens',
      'Nepales',
      'Myanmar',
      'Monegass',
      'Mongol',
      'Erb',
      'Mazedon',
      'Makedon',
      'Madagass',
      'Madegass',
      'Löw',
      'Libanes',
      'Langobard',
      'Lapp',
      'Kurd',
      'Banaus',
      'Kors',
      'Kosovar',
      'Kongoles',
      'Kompliz',
      'Kompars',
      'Kommiliton',
      'Kätz',
      'Kasach',
      'Katalan',
      'Kannibal',
      'Jugoslaw',
      'Jagellon',
      'Jeck',
      'Jesid',
      'Ir',
      'Invalid',
      'Insass',
      'Hess',
      'Hellen',
      'Heid',
      'Guatemaltek',
      'Griech',
      'Ghanes',
      'Gespiel',
      'Genoss',
      'German',
      'Genues',
      'Gemahl',
      'Fränk',
      'Französ',
      'Finn',
      'Falasch',
      'Rival',
      'Erb',
      'Elev',
      'Druid',
      'Drus',
      'Drach',
      'Dän',
      'Chilen',
      'Chines',
      'Bulgar',
      'Botokud',
      'Böhm',
      'Awar',
      'Bajuwar',
      'Balines',
      'Apach',
      'Aranes',
      'Ans',
      'Häs',
      'Sächs',
      'Afghan',
      'Äbtiss',
      'Abchas',
    ], (term, word) => word + 'e' + term[term.length - 1]),
  ]).concat([
    /**
     * Replace objects for all other plural terms:
     * - Alchemist*in -> Alchemist
     * - Held*in -> Held
     * - Bürger*in -> Bürger
     */
    getInRegExp('(?:\\w)', term => term[0] + term[term.length - 1]),
  ])

  /* code here */

}(typeof window !== 'undefined' ? window : this))
